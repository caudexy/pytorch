{% import 'common.yml.j2' as common %}

{%- block name -%}
# Template is at:    .github/templates/macos_ci_workflow.yml.j2
# Generation script: .github/scripts/generate_ci_workflows.py
name: !{{ build_environment }}
{%- endblock %}

on:
  pull_request:
    types: [opened, synchronize, reopened, !{{ ciflow_config.trigger_action }}]

{%- if is_scheduled %}
  schedule:
    - cron: !{{ is_scheduled }}
{%- else %}
  push:
    branches:
      - master
      - release/*
{%- endif %}
  workflow_dispatch:

# For setup-miniconda, see https://github.com/conda-incubator/setup-miniconda/issues/179
defaults:
  run:
    shell: bash -e -l {0}
env:
  BUILD_ENVIRONMENT: !{{ build_environment }}
  COMPACT_JOB_NAME: !{{ build_environment }}
  IN_CI: 1
  IS_GHA: 1

jobs:
!{{ common.ciflow_should_run_job(ciflow_config) }}
{% block build_test +%}
{%- if exclude_test %}
  build:
{%- else %}
  build-test:
{%- endif %}
    runs-on: !{{ test_runner_type }}
    needs: [!{{ ciflow_config.root_job_name }}]
    env:
      JOB_BASE_NAME: !{{ build_environment }}
      # For sccache access (only on non-forked PRs)
      AWS_ACCESS_KEY_ID: ${{ secrets.MACOS_SCCACHE_S3_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.MACOS_SCCACHE_S3_SECRET_ACCESS_KEY }}
    steps:
      !{{ common.checkout_pytorch("recursive") }}
      !{{ common.setup_miniconda("3.8") }}
      - name: Install macOS homebrew dependencies
        run: |
          # Install dependencies
          brew install libomp
      - name: Build
        run: |
          echo "CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname "$(which conda)")/../"}" >> "${GITHUB_ENV}"
          .jenkins/pytorch/macos-build.sh
{%- if build_generates_artifacts %}
      - name: Archive artifacts into zip  # bleh
        run: |
          zip -1 -r artifacts.zip dist/ build/
      - uses: actions/upload-artifact@v2
        name: Store PyTorch Build Artifacts on S3
        with:
          name: ${{ env.BUILD_ENVIRONMENT }}
          retention-days: 14
          if-no-files-found: error
          path:
            artifacts.zip
{%- endif %}
{%- if not exclude_test %}
      - name: Test
        run: |
          python -m pip install dist/*.whl
          .jenkins/pytorch/macos-test.sh
      !{{ common.render_test_results() }}
      !{{ common.upload_test_reports("macos", artifact_name="test-reports", use_s3=False) }}
{%- endif %}
{% endblock +%}

!{{ common.concurrency(build_environment) }}
